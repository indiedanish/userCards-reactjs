{"version":3,"sources":["UserCard.js","App.js","reportWebVitals.js","index.js"],"names":["UserCard","userData","useState","isFlipped","setFlipped","flipBack","className","flipDirection","onMouseOver","onMouseOut","src","picture","large","name","first","class","last","cell","email","location","street","App","users","setUser","allUsers","setAllUsers","useEffect","a","fetch","response","json","results","console","log","InputGroup","FormControl","placeholder","onInput","e","value","target","toLowerCase","filteredUsers","filter","user","includes","fluid","map","index","sm","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kSAgEeA,EAvDE,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAEhB,EAAgCC,oBAAS,GAAzC,mBAAOC,EAAP,KAAkBC,EAAlB,KAQMC,EAAW,WACbD,GAAW,IAMf,OAEI,mCAGI,qBAAKE,UAAU,WAAf,SACI,eAAC,IAAD,CAAeH,UAAWA,EAAWI,cAAc,WAAnD,UAEI,sBAAKD,UAAU,OAAOE,YArBtB,WACZJ,GAAW,IAoB6CK,WAAYJ,EAAxD,UACI,qBAAKC,UAAU,aAAaI,IAAKT,EAASU,QAAQC,QAElD,qBAAIN,UAAU,aAAd,eAA8BL,EAASY,KAAKC,MAA5C,QAEA,qBAAIR,UAAU,WAAd,cAA0B,mBAAGS,MAAM,qBAAnC,IAA4Dd,EAASY,KAAKC,MAA1E,IAAkFb,EAASY,KAAKG,KAAhG,QACA,qBAAIV,UAAU,YAAd,cAA2B,mBAAGS,MAAM,sBAApC,IAA8Dd,EAASgB,KAAvE,WAIJ,sBAAKX,UAAU,OAAOG,WAAYJ,EAAlC,UAEI,mBAAGU,MAAM,+BAET,qBAAIT,UAAU,aAAd,eAA8BL,EAASiB,MAAvC,QACA,qBAAIZ,UAAU,gBAAd,UACA,mBAAGS,MAAM,6BADT,IAC0Cd,EAASkB,SAASC,OAAOP,KADnE,mB,wCC4CTQ,MApFf,WAGE,MAAyBnB,mBAAS,IAAlC,mBAAOoB,EAAP,KAAcC,EAAd,KACA,EAAgCrB,mBAAS,IAAzC,mBAAOsB,EAAP,KAAiBC,EAAjB,KAyCA,OAvCAC,qBAAU,WAER,sBAAC,8BAAAC,EAAA,+EAK0BC,MAAM,yCALhC,cAKSC,EALT,gBAMqBA,EAASC,OAN9B,OAMG7B,EANH,OAMsC8B,QANtC,gDAWGC,QAAQC,IAAR,MACAhC,EAAW,GAZd,QAgBCsB,EAAQtB,GACRwB,EAAYxB,GAjBb,wDAAD,KAqBC,IAiBD,8BAGE,sBAAKK,UAAU,OAAf,UAEE,oBAAIA,UAAU,QAAd,yBAEA,cAAC4B,EAAA,EAAD,CAAY5B,UAAU,OAAtB,SAEE,cAAC6B,EAAA,EAAD,CACEC,YAAY,6BACZ,aAAW,WACX,mBAAiB,eACjBC,QA5BU,SAAAC,GAClB,IAAMC,EAAQD,EAAEE,OAAOD,MAAME,cACvBC,EAAgBlB,EAASmB,QAC7B,SAAAC,GAAI,MAAK,UAAGA,EAAK/B,KAAKC,MAAb,YAAsB8B,EAAK/B,KAAKG,MACtCyB,cAAcI,SAASN,IAAU,UAAGK,EAAK1B,OACzCuB,cAAcI,SAASN,MAK5BhB,EAAQmB,QAsBJ,cAAC,OAAD,CAAMI,OAAK,EAAX,SACE,cAAC,MAAD,UAGGxB,EAAMyB,KAAI,SAACH,EAAMI,GAAP,OACT,cAAC,MAAD,CAAKC,IAAE,EAAP,SACE,cAAC,EAAD,CAAUhD,SAAU2C,GAAWI,kBClEhCE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.13eb386d.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nimport ReactCardFlip from 'react-card-flip'\r\nimport './style/cardStyle.css'\r\n\r\nimport { useState } from 'react'\r\n\r\n\r\n\r\nconst UserCard = ({ userData }) => {\r\n\r\n    const [isFlipped, setFlipped] = useState(false)\r\n\r\n    const onHover = () => {\r\n        setFlipped(true)\r\n\r\n\r\n    }\r\n\r\n    const flipBack = () => {\r\n        setFlipped(false)\r\n\r\n\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <>\r\n\r\n           \r\n            <div className=\"mainCard\">\r\n                <ReactCardFlip isFlipped={isFlipped} flipDirection=\"vertical\"  >\r\n\r\n                    <div className=\"card\" onMouseOver={onHover} onMouseOut={flipBack} >\r\n                        <img className=\"card_image\" src={userData.picture.large} />\r\n\r\n                        <h1 className=\"card_title\">  {userData.name.first}  </h1>\r\n\r\n                        <h1 className=\"card_age\"> <i class=\"fa-solid fa-user\"></i> {userData.name.first} {userData.name.last}  </h1>\r\n                        <h3 className=\"card_cell\"> <i class=\"fa-solid fa-phone\"></i> {userData.cell}  </h3>\r\n\r\n                    </div>\r\n\r\n                    <div className=\"card\" onMouseOut={flipBack} >\r\n\r\n                        <i class=\"fa-brands fa-audible fa-3x\"></i>\r\n\r\n                        <h3 className=\"card_email\">  {userData.email}  </h3>\r\n                        <h3 className=\"card_location\">\r\n                        <i class=\"fa-solid fa-location-dot\"></i> {userData.location.street.name}  </h3>\r\n\r\n\r\n\r\n                    </div>\r\n                </ReactCardFlip>\r\n            </div>\r\n\r\n        </>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default UserCard;\r\n","\nimport { useState, useEffect } from 'react'\nimport UserCard from './UserCard'\nimport './App.css';\nimport './style/cardStyle.css'\nimport { Grid, Row, Col } from 'react-flexbox-grid';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { InputGroup, FormControl } from 'react-bootstrap'\n\nfunction App() {\n\n\n  const [users, setUser] = useState([]);\n  const [allUsers, setAllUsers] = useState([]);\n\n  useEffect(() => {\n\n    (async () => {\n\n      let userData;\n\n      try {\n        const response = await fetch('https://randomuser.me/api/?results=18');\n        userData = (await response.json()).results;\n\n      }\n\n      catch (error) {\n        console.log(error)\n        userData = [];\n\n      }\n\n      setUser(userData)\n      setAllUsers(userData)\n    })()\n\n\n  }, [])\n\n  const filterCards = e => {\n    const value = e.target.value.toLowerCase();\n    const filteredUsers = allUsers.filter(\n      user => (`${user.name.first} ${user.name.last}`\n        .toLowerCase().includes(value) || `${user.email}`\n        .toLowerCase().includes(value)\n      )\n\n    )\n\n    setUser(filteredUsers)\n\n  }\n\n  return (\n    <div>\n\n\n      <div className=\"User\" >\n\n        <h1 className=\"title\">User Cards </h1>\n\n        <InputGroup className=\"mb-3\">\n\n          <FormControl\n            placeholder=\"Search by name or email...\"\n            aria-label=\"Username\"\n            aria-describedby=\"basic-addon1\"\n            onInput={filterCards}\n          />\n        </InputGroup>\n\n        <Grid fluid>\n          <Row  >\n\n\n            {users.map((user, index) =>\n              <Col sm   >\n                <UserCard userData={user} key={index} />\n              </Col>\n\n            )}\n\n          </Row>\n        </Grid>\n        </div>\n\n\n    </div>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}